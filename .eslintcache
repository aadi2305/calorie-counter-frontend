[{"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\index.jsx":"1","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\App.jsx":"2","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Dashboard.jsx":"3","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Navbar.jsx":"4","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Mainbody.jsx":"5","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\themeContext.js":"6","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\ThemeContext.js":"7","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\AuthContext.js":"8","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\firebase.js":"9","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\TheForm.jsx":"10","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\BMICol.jsx":"11"},{"size":148,"mtime":1610695859089,"results":"12","hashOfConfig":"13"},{"size":799,"mtime":1610795370463,"results":"14","hashOfConfig":"13"},{"size":867,"mtime":1610795348128,"results":"15","hashOfConfig":"13"},{"size":3066,"mtime":1610981124894,"results":"16","hashOfConfig":"13"},{"size":4703,"mtime":1610795727719,"results":"17","hashOfConfig":"13"},{"size":900,"mtime":1610790180974,"results":"18","hashOfConfig":"13"},{"size":915,"mtime":1610792775267,"results":"19","hashOfConfig":"13"},{"size":1485,"mtime":1610793674652,"results":"20","hashOfConfig":"13"},{"size":497,"mtime":1610791457081,"results":"21","hashOfConfig":"13"},{"size":11245,"mtime":1611050450125,"results":"22","hashOfConfig":"13"},{"size":2148,"mtime":1610912004221,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1njrlqp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\index.jsx",[],["51","52"],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\App.jsx",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Dashboard.jsx",["53"],"import React, { useState, useEffect } from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport Mainbody from \"./Mainbody\"\r\nimport \"../styles/dashboard.css\"\r\nimport {useTheme} from \"../contexts/ThemeContext\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [othermode, setotherMode] = useState(\"Dark\");\r\n    \r\n    const {currentTheme, updateTheme} = useTheme();\r\n\r\n    const modeChange = ()=>{\r\n        if(currentTheme === \"dark\"){\r\n            setotherMode(\"Dark\");\r\n        }\r\n        else if(currentTheme === \"light\"){\r\n            setotherMode(\"Light\");\r\n        }\r\n        updateTheme();\r\n    }\r\n    //console.log(CurrentTheme);\r\n    return ( \r\n        <div className={\"dashboard dashboard-\"+currentTheme}>\r\n            <Navbar modeChange = {modeChange} mode = {othermode}/>\r\n            <Mainbody />\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Dashboard;","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Navbar.jsx",["54","55","56"],"import React, { useState, useEffect } from 'react';\r\nimport ArrowDropDownCircleOutlinedIcon from '@material-ui/icons/ArrowDropDownCircleOutlined';\r\nimport {useTheme} from \"../contexts/ThemeContext\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const {changeLoginStatus, loginStatus} = useTheme();\r\n    const{currentUser, logout} = useAuth();\r\n\r\n    var bool = false\r\n    if(window.innerWidth < 1000)bool = true;\r\n    const [showToggleBtn, setshowToggleBtn] = useState(bool);\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            if(window.innerWidth < 1000)setshowToggleBtn(true);\r\n            else{setshowToggleBtn(false)}\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n    });\r\n\r\n    return ( \r\n            <nav class=\"navbar\">\r\n                <h1 class=\"titleName\" href=\"#\">Calorix</h1>\r\n                {showToggleBtn ? null:\r\n                <div className = \"navbar-list\">\r\n                    <p>Home</p>\r\n                    <p>Princing</p>\r\n                    <p>Download</p>\r\n                    <button onClick = {(e)=>{\r\n                            e.preventDefault();\r\n                            if(currentUser)logout();\r\n                            else changeLoginStatus();\r\n                            }}  className = \"btn\">{currentUser? \"Log Out\":!loginStatus?\"Log In\":\"Sign Up\"}</button>\r\n                    <button onClick = {()=>{\r\n                        props.modeChange();\r\n                    }} className = \"btn\">{props.mode} Mode</button>\r\n                </div>\r\n                }\r\n                \r\n                \r\n                {showToggleBtn?\r\n                <div class=\"dropdown\">\r\n                    <ArrowDropDownCircleOutlinedIcon className=\"dropdown-toggle\" \r\n                            id=\"dropdownMenuButton\" \r\n                            data-bs-toggle=\"dropdown\" \r\n                            aria-expanded=\"false\">\r\n                        Dropdown button\r\n                    </ArrowDropDownCircleOutlinedIcon>\r\n                    <ul class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Home</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Princing</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Download</a></li>\r\n                        <button onClick = {(e)=>{\r\n                            e.preventDefault();\r\n                            if(currentUser)logout();\r\n                            else changeLoginStatus();\r\n                            }}  className = \"btn dropdown-item\">{currentUser? \"Log Out\":!loginStatus?\"Log In\":\"Sign Up\"}</button>\r\n                        <button onClick = {()=>{\r\n                        props.modeChange();\r\n                        }} className = \"btn dropdown-item\">{props.mode} Mode</button>\r\n                    </ul>\r\n                </div>\r\n                :null}\r\n    \r\n            </nav>\r\n\r\n     );\r\n}\r\n \r\nexport default Navbar;","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Mainbody.jsx",["57"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport {useTheme} from \"../contexts/ThemeContext\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Mainbody = () => {\r\n\r\n    const [passwordShow, setpasswordShow] = useState(false);\r\n    \r\n    const [error, setError] = useState(\"\");\r\n    const passoword = useRef(null);\r\n    const confirmPassoword = useRef(null);\r\n    const email = useRef(null);\r\n    const fullName = useRef(null);\r\n\r\n    const {signup, login, currentUser} = useAuth();\r\n    const{loginStatus} = useTheme()\r\n    \r\n    const showPassword = (e)=>{\r\n        if(document.getElementById(\"password\").type === \"text\")document.getElementById(\"password\").type = \"password\";\r\n        else if(document.getElementById(\"password\").type === \"password\")document.getElementById(\"password\").type = \"text\";\r\n        setpasswordShow(!passwordShow);\r\n    }\r\n\r\n    const submitSignUpHandler = (e)=>{\r\n        e.preventDefault();\r\n        if(passoword.current.value !== confirmPassoword.current.value){\r\n            setError(\"Password Do Not Match\")\r\n        }else setError(null)\r\n\r\n        try {\r\n            signup(email.current.value,passoword.current.value);\r\n        }\r\n        catch(err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n    \r\n    const submitLogInHandler = (e)=>{\r\n        e.preventDefault();\r\n        try {\r\n            login(email.current.value,passoword.current.value);\r\n        }\r\n        catch(err) {\r\n          console.log(err);\r\n        }                \r\n    }\r\n\r\n    return ( \r\n        <div className=\"mainbody container-fluid\">\r\n            {currentUser && <Redirect to = \"/form\" />}\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h1 className = \"h1\">Count Those Calories</h1>\r\n                </div>\r\n                <div className=\"col aye\">\r\n                    {!loginStatus?\r\n                        <form onSubmit = {submitSignUpHandler}className = \"signUpForm\">\r\n                            {error?\r\n                                <div class=\"alert alert-danger\" role=\"alert\">\r\n                                    {error}\r\n                                </div> \r\n                            :null}\r\n                            <input ref = {fullName}type=\"text\" placeholder = \"Your Name\"/>\r\n                            <input ref = {email} type=\"email\" placeholder = \"Email Address\"/>\r\n                            <div className = \"aye2\">\r\n                                <input type=\"password\" id = \"password\"ref = {passoword}placeholder = \"Password\"/>\r\n                                {!passwordShow ? \r\n                                    <VisibilityOffIcon onClick = {showPassword} id = \"visibility-off-icon\" />:\r\n                                    <VisibilityIcon onClick = {showPassword} id = \"visibility-icon\" />\r\n                                }\r\n                                \r\n                            </div>\r\n                            <input type=\"password\" ref= {confirmPassoword}placeholder = \"Confirm Password\"/>\r\n                            <button className=\"btn\">Sign Up</button>\r\n                        </form>\r\n                    :\r\n                        <form onSubmit = {submitLogInHandler}className = \"signUpForm\">\r\n                            {error?\r\n                                <div class=\"alert alert-danger\" role=\"alert\">\r\n                                    {error}\r\n                                </div> \r\n                            :null}\r\n                            <input type=\"text\" style = {{visibility : \"hidden\"}}/>\r\n                            <input ref = {email} type=\"email\" placeholder = \"Email Address\"/>\r\n                            <div className = \"aye2\">\r\n                                <input type=\"password\" id = \"password\"ref = {passoword}placeholder = \"Password\"/>\r\n                                {!passwordShow ? \r\n                                    <VisibilityOffIcon onClick = {showPassword} id = \"visibility-off-icon\" />:\r\n                                    <VisibilityIcon onClick = {showPassword} id = \"visibility-icon\" />\r\n                                }\r\n                                \r\n                            </div>\r\n                            <button className=\"btn\">Log In</button>\r\n                            <input type=\"text\" style = {{visibility : \"hidden\"}}/>\r\n                        </form>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Mainbody;","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\themeContext.js",["58"],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\ThemeContext.js",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\AuthContext.js",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\firebase.js",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\TheForm.jsx",["59","60","61","62","63","64","65","66","67","68","69","70"],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\BMICol.jsx",["71","72","73"],"import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst BMICol = (props) => {\r\n        const [BMR, setBMR] = useState(0);\r\n    const mifflinSteor = ()=>{\r\n        if(props.male){\r\n            setBMR((10*props.weight) + (6.25*props.height) - (5*props.age) + 5)\r\n        }else{\r\n            setBMR((10*props.weight) + (6.25*props.height) - (5*props.age) - 165)\r\n        }\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"BMICol\">\r\n            <div className=\"BMI-class\">\r\n                <p>Your BMI:</p>\r\n                <p className = \"bmi-text\">{props.BMI}</p>\r\n            </div>\r\n            <div class=\"form-group BMI-class\">\r\n                <p for=\"exampleFormControlSelect1\">Activity: </p>\r\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                    <option>Little or No exercise</option>\r\n                    <option>Light: Excerise 1-3 time a week</option>\r\n                    <option>Moderate: Exercise 4-5 times a week</option>\r\n                    <option>Active: Daily Exercise or Intense workout 3-4 times a week</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"checkbox\">\r\n                <p>BMR estimation formula:</p>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" checked />\r\n                    <label class=\"form-check-label\" for=\"exampleRadios1\">Mifflin-St Jeor (default)</label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" />\r\n                    <label class=\"form-check-label\" for=\"exampleRadios2\">Katch-McArdle</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"BMI-class\" style = {{visibility : \"hidden\"}}>\r\n                <p>Your BMI:</p>\r\n                <p className = \"bmi-text\">{props.BMI}</p>\r\n            </div>\r\n            <button className =\"btn submit-button\">Submit</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BMICol;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":52,"column":29,"nodeType":"84","endLine":52,"endColumn":67},{"ruleId":"82","severity":1,"message":"83","line":53,"column":29,"nodeType":"84","endLine":53,"endColumn":67},{"ruleId":"82","severity":1,"message":"83","line":54,"column":29,"nodeType":"84","endLine":54,"endColumn":67},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"85","severity":2,"message":"86","line":29,"column":12,"nodeType":"80","endLine":29,"endColumn":22},{"ruleId":"78","severity":1,"message":"87","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"88","line":19,"column":12,"nodeType":"80","messageId":"81","endLine":19,"endColumn":24},{"ruleId":"78","severity":1,"message":"89","line":19,"column":26,"nodeType":"80","messageId":"81","endLine":19,"endColumn":41},{"ruleId":"78","severity":1,"message":"90","line":26,"column":11,"nodeType":"80","messageId":"81","endLine":26,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":58,"column":24,"nodeType":"93","messageId":"94","endLine":58,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":59,"column":29,"nodeType":"93","messageId":"94","endLine":59,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":60,"column":29,"nodeType":"93","messageId":"94","endLine":60,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":61,"column":29,"nodeType":"93","messageId":"94","endLine":61,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":62,"column":29,"nodeType":"93","messageId":"94","endLine":62,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":138,"column":117,"nodeType":"97","endLine":138,"endColumn":145},{"ruleId":"95","severity":1,"message":"96","line":139,"column":118,"nodeType":"97","endLine":139,"endColumn":146},{"ruleId":"95","severity":1,"message":"96","line":190,"column":119,"nodeType":"97","endLine":190,"endColumn":128},{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"98","line":5,"column":16,"nodeType":"80","messageId":"81","endLine":5,"endColumn":19},{"ruleId":"78","severity":1,"message":"99","line":6,"column":11,"nodeType":"80","messageId":"81","endLine":6,"endColumn":23},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/rules-of-hooks","React Hook \"useContext\" is called in function \"currentTheme\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'BMICol' is defined but never used.","'weightTarget' is assigned a value but never used.","'setweightTarget' is assigned a value but never used.","'clickedButtonStyle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BMR' is assigned a value but never used.","'mifflinSteor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]