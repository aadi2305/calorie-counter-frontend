[{"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\index.jsx":"1","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\App.jsx":"2","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Dashboard.jsx":"3","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Navbar.jsx":"4","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Mainbody.jsx":"5","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\themeContext.js":"6","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\ThemeContext.js":"7","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\AuthContext.js":"8","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\firebase.js":"9","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\TheForm.jsx":"10","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\BMICol.jsx":"11"},{"size":148,"mtime":1610695859089,"results":"12","hashOfConfig":"13"},{"size":799,"mtime":1610795370463,"results":"14","hashOfConfig":"13"},{"size":867,"mtime":1610795348128,"results":"15","hashOfConfig":"13"},{"size":3066,"mtime":1610981124894,"results":"16","hashOfConfig":"13"},{"size":4703,"mtime":1610795727719,"results":"17","hashOfConfig":"13"},{"size":900,"mtime":1610790180974,"results":"18","hashOfConfig":"13"},{"size":915,"mtime":1610792775267,"results":"19","hashOfConfig":"13"},{"size":1485,"mtime":1610793674652,"results":"20","hashOfConfig":"13"},{"size":497,"mtime":1610791457081,"results":"21","hashOfConfig":"13"},{"size":11404,"mtime":1611052747623,"results":"22","hashOfConfig":"13"},{"size":2148,"mtime":1610912004221,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1njrlqp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\index.jsx",[],["52","53"],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\App.jsx",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Dashboard.jsx",["54"],"import React, { useState, useEffect } from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport Mainbody from \"./Mainbody\"\r\nimport \"../styles/dashboard.css\"\r\nimport {useTheme} from \"../contexts/ThemeContext\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [othermode, setotherMode] = useState(\"Dark\");\r\n    \r\n    const {currentTheme, updateTheme} = useTheme();\r\n\r\n    const modeChange = ()=>{\r\n        if(currentTheme === \"dark\"){\r\n            setotherMode(\"Dark\");\r\n        }\r\n        else if(currentTheme === \"light\"){\r\n            setotherMode(\"Light\");\r\n        }\r\n        updateTheme();\r\n    }\r\n    //console.log(CurrentTheme);\r\n    return ( \r\n        <div className={\"dashboard dashboard-\"+currentTheme}>\r\n            <Navbar modeChange = {modeChange} mode = {othermode}/>\r\n            <Mainbody />\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Dashboard;","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Navbar.jsx",["55","56","57"],"import React, { useState, useEffect } from 'react';\r\nimport ArrowDropDownCircleOutlinedIcon from '@material-ui/icons/ArrowDropDownCircleOutlined';\r\nimport {useTheme} from \"../contexts/ThemeContext\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const {changeLoginStatus, loginStatus} = useTheme();\r\n    const{currentUser, logout} = useAuth();\r\n\r\n    var bool = false\r\n    if(window.innerWidth < 1000)bool = true;\r\n    const [showToggleBtn, setshowToggleBtn] = useState(bool);\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            if(window.innerWidth < 1000)setshowToggleBtn(true);\r\n            else{setshowToggleBtn(false)}\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n    });\r\n\r\n    return ( \r\n            <nav class=\"navbar\">\r\n                <h1 class=\"titleName\" href=\"#\">Calorix</h1>\r\n                {showToggleBtn ? null:\r\n                <div className = \"navbar-list\">\r\n                    <p>Home</p>\r\n                    <p>Princing</p>\r\n                    <p>Download</p>\r\n                    <button onClick = {(e)=>{\r\n                            e.preventDefault();\r\n                            if(currentUser)logout();\r\n                            else changeLoginStatus();\r\n                            }}  className = \"btn\">{currentUser? \"Log Out\":!loginStatus?\"Log In\":\"Sign Up\"}</button>\r\n                    <button onClick = {()=>{\r\n                        props.modeChange();\r\n                    }} className = \"btn\">{props.mode} Mode</button>\r\n                </div>\r\n                }\r\n                \r\n                \r\n                {showToggleBtn?\r\n                <div class=\"dropdown\">\r\n                    <ArrowDropDownCircleOutlinedIcon className=\"dropdown-toggle\" \r\n                            id=\"dropdownMenuButton\" \r\n                            data-bs-toggle=\"dropdown\" \r\n                            aria-expanded=\"false\">\r\n                        Dropdown button\r\n                    </ArrowDropDownCircleOutlinedIcon>\r\n                    <ul class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Home</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Princing</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"#\">Download</a></li>\r\n                        <button onClick = {(e)=>{\r\n                            e.preventDefault();\r\n                            if(currentUser)logout();\r\n                            else changeLoginStatus();\r\n                            }}  className = \"btn dropdown-item\">{currentUser? \"Log Out\":!loginStatus?\"Log In\":\"Sign Up\"}</button>\r\n                        <button onClick = {()=>{\r\n                        props.modeChange();\r\n                        }} className = \"btn dropdown-item\">{props.mode} Mode</button>\r\n                    </ul>\r\n                </div>\r\n                :null}\r\n    \r\n            </nav>\r\n\r\n     );\r\n}\r\n \r\nexport default Navbar;","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\Mainbody.jsx",["58"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport {useTheme} from \"../contexts/ThemeContext\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Mainbody = () => {\r\n\r\n    const [passwordShow, setpasswordShow] = useState(false);\r\n    \r\n    const [error, setError] = useState(\"\");\r\n    const passoword = useRef(null);\r\n    const confirmPassoword = useRef(null);\r\n    const email = useRef(null);\r\n    const fullName = useRef(null);\r\n\r\n    const {signup, login, currentUser} = useAuth();\r\n    const{loginStatus} = useTheme()\r\n    \r\n    const showPassword = (e)=>{\r\n        if(document.getElementById(\"password\").type === \"text\")document.getElementById(\"password\").type = \"password\";\r\n        else if(document.getElementById(\"password\").type === \"password\")document.getElementById(\"password\").type = \"text\";\r\n        setpasswordShow(!passwordShow);\r\n    }\r\n\r\n    const submitSignUpHandler = (e)=>{\r\n        e.preventDefault();\r\n        if(passoword.current.value !== confirmPassoword.current.value){\r\n            setError(\"Password Do Not Match\")\r\n        }else setError(null)\r\n\r\n        try {\r\n            signup(email.current.value,passoword.current.value);\r\n        }\r\n        catch(err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n    \r\n    const submitLogInHandler = (e)=>{\r\n        e.preventDefault();\r\n        try {\r\n            login(email.current.value,passoword.current.value);\r\n        }\r\n        catch(err) {\r\n          console.log(err);\r\n        }                \r\n    }\r\n\r\n    return ( \r\n        <div className=\"mainbody container-fluid\">\r\n            {currentUser && <Redirect to = \"/form\" />}\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h1 className = \"h1\">Count Those Calories</h1>\r\n                </div>\r\n                <div className=\"col aye\">\r\n                    {!loginStatus?\r\n                        <form onSubmit = {submitSignUpHandler}className = \"signUpForm\">\r\n                            {error?\r\n                                <div class=\"alert alert-danger\" role=\"alert\">\r\n                                    {error}\r\n                                </div> \r\n                            :null}\r\n                            <input ref = {fullName}type=\"text\" placeholder = \"Your Name\"/>\r\n                            <input ref = {email} type=\"email\" placeholder = \"Email Address\"/>\r\n                            <div className = \"aye2\">\r\n                                <input type=\"password\" id = \"password\"ref = {passoword}placeholder = \"Password\"/>\r\n                                {!passwordShow ? \r\n                                    <VisibilityOffIcon onClick = {showPassword} id = \"visibility-off-icon\" />:\r\n                                    <VisibilityIcon onClick = {showPassword} id = \"visibility-icon\" />\r\n                                }\r\n                                \r\n                            </div>\r\n                            <input type=\"password\" ref= {confirmPassoword}placeholder = \"Confirm Password\"/>\r\n                            <button className=\"btn\">Sign Up</button>\r\n                        </form>\r\n                    :\r\n                        <form onSubmit = {submitLogInHandler}className = \"signUpForm\">\r\n                            {error?\r\n                                <div class=\"alert alert-danger\" role=\"alert\">\r\n                                    {error}\r\n                                </div> \r\n                            :null}\r\n                            <input type=\"text\" style = {{visibility : \"hidden\"}}/>\r\n                            <input ref = {email} type=\"email\" placeholder = \"Email Address\"/>\r\n                            <div className = \"aye2\">\r\n                                <input type=\"password\" id = \"password\"ref = {passoword}placeholder = \"Password\"/>\r\n                                {!passwordShow ? \r\n                                    <VisibilityOffIcon onClick = {showPassword} id = \"visibility-off-icon\" />:\r\n                                    <VisibilityIcon onClick = {showPassword} id = \"visibility-icon\" />\r\n                                }\r\n                                \r\n                            </div>\r\n                            <button className=\"btn\">Log In</button>\r\n                            <input type=\"text\" style = {{visibility : \"hidden\"}}/>\r\n                        </form>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Mainbody;","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\themeContext.js",["59"],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\ThemeContext.js",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\contexts\\AuthContext.js",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\firebase.js",[],"F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\TheForm.jsx",["60","61","62","63","64","65","66","67","68","69","70","71"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport Navbar from \"./Navbar\"\r\nimport BMICol from \"./BMICol\";\r\nimport {useTheme} from \"../contexts/ThemeContext\";\r\nimport \"../styles/theForm.css\";\r\nimport $ from \"jquery\";\r\n\r\nconst TheForm = () => {\r\n    const {currentTheme, updateTheme} = useTheme();\r\n    const [othermode, setotherMode] = useState(\"Dark\");\r\n    const [heightUnitToggle, setHeightUnitToggle] = useState(true);\r\n    const [weightUnitToggle, setWeightUnitToggle] = useState(true);\r\n    const [BMI, setBMI] = useState(1);\r\n    const [male, setMale] = useState(null);\r\n    const [weight, setweight] = useState(0);\r\n    const [feet, setfeet] = useState(0);\r\n    const [inches, setinches] = useState(0);\r\n    const weightRef = useRef()\r\n    const [weightTarget, setweightTarget] = useState(0);\r\n    const [height, setheight] = useState(0);\r\n    const [age, setage] = useState(0);\r\n    const [BMR, setBMR] = useState(0);\r\n    const [weightStatus, setWeightStatus] = useState(\"Overweight\");\r\n    const [idealWeight, setidealWeight] = useState(1);\r\n    const [maintainenceCal, setmaintainenceCal] = useState(0);\r\n    const clickedButtonStyle = {\r\n        color : \"#05386b\",\r\n        backgroundColor : '#5cdb95'\r\n    }\r\n    \r\n    const changeInchesToCm = (feet, inches)=>{\r\n        var totalInches = parseInt(inches) + (12*feet);\r\n        var heightValue = 2.54*totalInches;\r\n        return heightValue;\r\n    }\r\n\r\n    const mifflinSteor = ()=>{\r\n        var heightValue = 0;\r\n        if(!heightUnitToggle)heightValue = changeInchesToCm(feet, inches)\r\n        else heightValue = height;\r\n        if(male){\r\n            setBMR((10*weight) + (6.25*heightValue) - (5*age) + 5)\r\n        }else{  \r\n            setBMR((10*weight) + (6.25*heightValue) - (5*age) - 165)\r\n        }\r\n    }\r\n    const harrisBenedict = ()=>{\r\n        var heightValue = 0;\r\n        if(!heightUnitToggle)heightValue = changeInchesToCm(feet, inches)\r\n        else heightValue = height;\r\n        if(male){\r\n            setBMR(((13.397*weight) + (4.799*heightValue) - (5.677*age) + 88.362).toFixed(0))\r\n        }else{  \r\n            setBMR(((9.247*weight) + (3.098*heightValue) - (4.330*age) + 447.593).toFixed(0))\r\n        }\r\n    }\r\n    const onChangeHandler = (e)=>{\r\n        if(e.target.id == \"age\")setage(e.target.value);\r\n        else if(e.target.id == \"weight\")setweight(e.target.value);\r\n        else if(e.target.id == \"height\")setheight(e.target.value);\r\n        else if(e.target.id == \"feet\")setfeet(e.target.value);\r\n        else if(e.target.id == \"inches\")setinches(e.target.value);\r\n        if((height !== 0 && weight !==0)|| (height !== 0 && feet !== 0&& inches !==0)){\r\n           \r\n        }\r\n        // console.log(e.target.id);\r\n    }\r\n    const modeChange = ()=>{\r\n        if(currentTheme === \"dark\"){\r\n            setotherMode(\"Dark\");\r\n        }\r\n        else if(currentTheme === \"light\"){\r\n            setotherMode(\"Light\");\r\n        }\r\n        updateTheme();\r\n    }\r\n    useEffect(() => {\r\n        var theArray = $('form').serialize().split(\"&\");\r\n        if(theArray[0].split(\"=\")[1] === \"0\")setmaintainenceCal(1.2*BMR);\r\n        else if(theArray[0].split(\"=\")[1] === \"1\")setmaintainenceCal(1.37*BMR);\r\n        else if(theArray[0].split(\"=\")[1] === \"2\")setmaintainenceCal(1.46*BMR);\r\n        else if(theArray[0].split(\"=\")[1] === \"3\")setmaintainenceCal(1.55*BMR);\r\n    }, [BMR]);\r\n\r\n    const submitHandler2 = ()=>{\r\n        \r\n        var theArray = $('form').serialize().split(\"&\");\r\n\r\n        if(theArray[1].split(\"=\")[1] === \"1\")harrisBenedict();\r\n        else if(theArray[1].split(\"=\")[1] === \"0\")mifflinSteor();\r\n        console.log(BMR);\r\n        if(theArray[0].split(\"=\")[1] === \"0\")setmaintainenceCal(1.2*BMR);\r\n        else if(theArray[0].split(\"=\")[1] === \"1\")setmaintainenceCal(1.37*BMR);\r\n        else if(theArray[0].split(\"=\")[1] === \"2\")setmaintainenceCal(1.46*BMR);\r\n        else if(theArray[0].split(\"=\")[1] === \"3\")setmaintainenceCal(1.55*BMR);\r\n    }\r\n\r\n    const submitHandler1 = ()=>{\r\n        var heightValue = 0;\r\n        if(!heightUnitToggle)heightValue = changeInchesToCm(feet, inches)\r\n        else heightValue = height;\r\n\r\n        heightValue = heightValue / 100;\r\n        \r\n        setBMI((weightRef.current.value / Math.pow(heightValue,2)).toFixed(1)); \r\n        const currentBmi = (weightRef.current.value / Math.pow(heightValue,2)).toFixed(1);\r\n        if(currentBmi < 18.5)setWeightStatus(\"Underweight\")\r\n        else if(currentBmi >= 18.5 && currentBmi <24.9)setWeightStatus(\"Normal Weight\")\r\n        else if(currentBmi>= 24.9 && currentBmi < 29.9)setWeightStatus(\"Overweight\")\r\n        else if(currentBmi>=  29.9)setWeightStatus(\"Obese\")\r\n\r\n        var hegihtInInches = heightValue*39.37;\r\n        hegihtInInches = hegihtInInches - 60;\r\n\r\n        if(male && hegihtInInches > 0)setidealWeight((52 + (1.9*hegihtInInches)).toFixed(0))\r\n        else if(!male && hegihtInInches > 0)setidealWeight((49 + (1.7*hegihtInInches)).toFixed(0))\r\n    }\r\n    \r\n    return ( \r\n        <div className = {\"the-form dashboard-\"+currentTheme}>\r\n            <Navbar modeChange = {modeChange} mode = {othermode}/>\r\n            <div className={\"row the-form-content the-form-\"+currentTheme}>\r\n                <div className=\"col col-lg-6 col-sm-12 infoTab1\">\r\n                    <div className=\"sex\">\r\n                        <button onClick = {()=>setMale(true)} id = \"malebutton\" className = {male? \"btn clicked-button\":\"btn\"}>Male</button>\r\n                        <button onClick = {()=>setMale(false)} id = \"femalebutton\"className = {male === false? \"btn clicked-button\":\"btn\"}>Female</button>\r\n                    </div>\r\n                    <div className=\"age\">\r\n                        <p>Age: </p>\r\n                        <input placeholder = \"Age...\"autoComplete = \"off\" id = \"age\"onChange = {onChangeHandler}type=\"number\" min = \"0\"/>\r\n                        <span id = \"years\"className = \"units\">Years</span>\r\n                    </div>\r\n                    <div className=\"age\">\r\n                        <p>Height: </p>\r\n                        {heightUnitToggle?\r\n                        <input autoComplete = \"off\" placeholder = \"Height...\"id = \"height\" onChange = {onChangeHandler} type=\"number\" min = \"0\" />:\r\n                        <div className = \"ftnIn-class\">\r\n                            <input placeholder = \"Feet...\"autoComplete = \"off\" onChange = {onChangeHandler} className = \"ftnIn\" id = \"feet\"onChange = {onChangeHandler} type=\"number\" min = \"0\" /><span className = \"feetColon\">'</span>\r\n                            <input placeholder = \"Inches...\" autoComplete = \"off\" onChange = {onChangeHandler} className = \"ftnIn\"id = \"inches\"onChange = {onChangeHandler} type=\"number\" min = \"0\" /><span className = \"feetColon\">\"</span>\r\n                        </div>\r\n                        }\r\n                        <span onClick = {()=>setHeightUnitToggle(!heightUnitToggle)} className = \"units\">{heightUnitToggle?\"CM\":\"Ft/In\"}</span>\r\n                    </div>\r\n                    <div className=\"age\">\r\n                        <p>Weight: </p>\r\n                        <input placeholder = \"Weight...\" autoComplete = \"off\" id = \"weight\" ref = {weightRef} onChange = {onChangeHandler} type=\"number\" min = \"0\" />\r\n                        <span onClick = {()=>setWeightUnitToggle(!weightUnitToggle)}  className = \"units\">{weightUnitToggle?\"Kg\":\"Pd\"}</span>\r\n                    </div>\r\n                    <button onClick = {submitHandler1} className =\"btn submit-button\">Submit</button>\r\n                </div>\r\n                <div className=\"col col-lg-6 col-sm-12 BMICol\">\r\n                    {/* <BMICol BMI = {BMI} height = {height}  weight= {weight} age= {age} male = {male}/> */}\r\n                    {BMI !== 0 && idealWeight!== 0 &&\r\n                    <div className=\"BMI-class row\">\r\n                        <div className=\"col\" style = {{textAlign : \"center\"}}>\r\n                            <h5 id = \"ur-bmi-text\">Your BMI: {BMI}</h5>\r\n                            {/* <span className = \"bmi-text\">{BMI}</span> */}\r\n                            <h4 className = \"weight-status-and-ideal-weight\" style = {{fontWeight : \"650\"}}>{weightStatus}</h4>\r\n                        </div>\r\n                        <div className=\"col\" style = {{textAlign : \"center\"}}>\r\n                            <h5 id = \"ideal-weight\">Ideal Weight Range</h5>\r\n                            <h4 className = \"weight-status-and-ideal-weight\" style = {{fontWeight : \"650\"}}>{idealWeight-5}-{parseInt(idealWeight)+5}Kg</h4>\r\n                        </div>\r\n                        \r\n                    </div>}\r\n                    <div class=\"form-group BMI-class\">\r\n                        <p for=\"exampleFormControlSelect1\">Activity: </p>\r\n                        {/* <form> */}\r\n                            <select name = \"activity-form\" class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                                <option value = \"0\">Little or No exercise</option>\r\n                                <option value = \"1\">Light: Excerise 1-3 time a week</option>\r\n                                <option value = \"2\">Moderate: Exercise 4-5 times a week</option>\r\n                                <option value = \"3\">Active: Daily Exercise or Intense workout 3-4 times a week</option>\r\n                            </select>\r\n                        {/* </form> */}\r\n                    </div>\r\n                    <form  className=\"checkbox  BMI-class\">\r\n                            <p>BMR estimation formula:</p>\r\n                           <label className=\"form-check\">Mifflin-St Jeor (default)\r\n                                <input type=\"radio\" name=\"formula\" value=\"0\" checked/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                            <label id = \"secondCheckbox\"className=\"form-check\">Harris-Benedict\r\n                                <input type=\"radio\"  name=\"formula\" value=\"1\" />\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                    </form>\r\n                    <div className=\"BMI-class\">\r\n                        <p>Weight Target: </p>\r\n                        <input placeholder = \"Target Weight...\" autoComplete = \"off\" min = \"0\" id = \"weight\"onChange = {onChangeHandler} type=\"number\" min = \"0\" />\r\n                        <span onClick = {()=>setWeightUnitToggle(!weightUnitToggle)}  className = \"units\">{weightUnitToggle?\"Kg\":\"Pd\"}</span>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n            <div style = {{display : \"block\" ,textAlign : \"center\"}}>\r\n                <button  onClick = {submitHandler2}className =\"next-skip-button btn\">Submit</button>\r\n                <button  className =\"next-skip-button btn\">Skip</button>\r\n                <button  className =\"next-skip-button btn\">Next</button>\r\n                </div>\r\n            \r\n            {BMR === 0? null : <div style = {{textAlign : \"center\"}}>\r\n                <p style = {{marginBottom : \"0\"}}>You need</p>\r\n                <h3 style = {{fontWeight : \"600\"}}>{maintainenceCal.toFixed(1)} Calories/Day</h3>\r\n                <p style = {{marginBottom : \"0\"}}>To maintain your Weight</p>\r\n                </div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default React.memo(TheForm);\r\n","F:\\Personal Projects - Web dev\\Calorie Counter\\frontend\\src\\components\\BMICol.jsx",["72","73","74"],"import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst BMICol = (props) => {\r\n        const [BMR, setBMR] = useState(0);\r\n    const mifflinSteor = ()=>{\r\n        if(props.male){\r\n            setBMR((10*props.weight) + (6.25*props.height) - (5*props.age) + 5)\r\n        }else{\r\n            setBMR((10*props.weight) + (6.25*props.height) - (5*props.age) - 165)\r\n        }\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"BMICol\">\r\n            <div className=\"BMI-class\">\r\n                <p>Your BMI:</p>\r\n                <p className = \"bmi-text\">{props.BMI}</p>\r\n            </div>\r\n            <div class=\"form-group BMI-class\">\r\n                <p for=\"exampleFormControlSelect1\">Activity: </p>\r\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                    <option>Little or No exercise</option>\r\n                    <option>Light: Excerise 1-3 time a week</option>\r\n                    <option>Moderate: Exercise 4-5 times a week</option>\r\n                    <option>Active: Daily Exercise or Intense workout 3-4 times a week</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"checkbox\">\r\n                <p>BMR estimation formula:</p>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" checked />\r\n                    <label class=\"form-check-label\" for=\"exampleRadios1\">Mifflin-St Jeor (default)</label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" />\r\n                    <label class=\"form-check-label\" for=\"exampleRadios2\">Katch-McArdle</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"BMI-class\" style = {{visibility : \"hidden\"}}>\r\n                <p>Your BMI:</p>\r\n                <p className = \"bmi-text\">{props.BMI}</p>\r\n            </div>\r\n            <button className =\"btn submit-button\">Submit</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BMICol;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":52,"column":29,"nodeType":"85","endLine":52,"endColumn":67},{"ruleId":"83","severity":1,"message":"84","line":53,"column":29,"nodeType":"85","endLine":53,"endColumn":67},{"ruleId":"83","severity":1,"message":"84","line":54,"column":29,"nodeType":"85","endLine":54,"endColumn":67},{"ruleId":"79","severity":1,"message":"80","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"86","severity":2,"message":"87","line":29,"column":12,"nodeType":"81","endLine":29,"endColumn":22},{"ruleId":"79","severity":1,"message":"88","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"89","line":19,"column":12,"nodeType":"81","messageId":"82","endLine":19,"endColumn":24},{"ruleId":"79","severity":1,"message":"90","line":19,"column":26,"nodeType":"81","messageId":"82","endLine":19,"endColumn":41},{"ruleId":"79","severity":1,"message":"91","line":26,"column":11,"nodeType":"81","messageId":"82","endLine":26,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":58,"column":24,"nodeType":"94","messageId":"95","endLine":58,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":59,"column":29,"nodeType":"94","messageId":"95","endLine":59,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":60,"column":29,"nodeType":"94","messageId":"95","endLine":60,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":61,"column":29,"nodeType":"94","messageId":"95","endLine":61,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":62,"column":29,"nodeType":"94","messageId":"95","endLine":62,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":138,"column":140,"nodeType":"98","endLine":138,"endColumn":168},{"ruleId":"96","severity":1,"message":"97","line":139,"column":144,"nodeType":"98","endLine":139,"endColumn":172},{"ruleId":"96","severity":1,"message":"97","line":190,"column":151,"nodeType":"98","endLine":190,"endColumn":160},{"ruleId":"79","severity":1,"message":"80","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"99","line":5,"column":16,"nodeType":"81","messageId":"82","endLine":5,"endColumn":19},{"ruleId":"79","severity":1,"message":"100","line":6,"column":11,"nodeType":"81","messageId":"82","endLine":6,"endColumn":23},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/rules-of-hooks","React Hook \"useContext\" is called in function \"currentTheme\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'BMICol' is defined but never used.","'weightTarget' is assigned a value but never used.","'setweightTarget' is assigned a value but never used.","'clickedButtonStyle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BMR' is assigned a value but never used.","'mifflinSteor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]